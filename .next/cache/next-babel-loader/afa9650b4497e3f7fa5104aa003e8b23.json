{"ast":null,"code":"var _jsxFileName = \"/home/willian/repositorios/giramondo/src/context/GlobalContext.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nconst GlobalContext = React.createContext();\n\nconst GlobalProvider = ({\n  children\n}) => {\n  const {\n    0: themeDark,\n    1: setThemeDark\n  } = useState(false);\n  const {\n    0: videoModalVisible,\n    1: setVideoModalVisible\n  } = useState(false);\n  const {\n    0: visibleOffCanvas,\n    1: setVisibleOffCanvas\n  } = useState(false);\n  const {\n    0: header,\n    1: setHeader\n  } = useState({\n    theme: \"light\",\n    variant: \"primary\",\n    align: \"left\",\n    isFluid: false,\n    button: \"cta\" // cta, account, null\n\n  });\n  const {\n    0: footer,\n    1: setFooter\n  } = useState({\n    theme: \"dark\",\n    style: \"style1\" //style1, style2\n\n  });\n\n  const toggleTheme = () => {\n    setThemeDark(!themeDark);\n  };\n\n  const toggleVideoModal = () => {\n    setVideoModalVisible(!videoModalVisible);\n  };\n\n  const toggleOffCanvas = () => {\n    setVisibleOffCanvas(!visibleOffCanvas);\n  };\n\n  const closeOffCanvas = () => {\n    setVisibleOffCanvas(false);\n  };\n\n  return __jsx(GlobalContext.Provider, {\n    value: {\n      themeDark,\n      toggleTheme,\n      videoModalVisible,\n      toggleVideoModal,\n      visibleOffCanvas,\n      toggleOffCanvas,\n      closeOffCanvas,\n      header,\n      setHeader,\n      footer,\n      setFooter\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport default GlobalContext;\nexport { GlobalProvider };","map":{"version":3,"sources":["/home/willian/repositorios/giramondo/src/context/GlobalContext.js"],"names":["React","useState","GlobalContext","createContext","GlobalProvider","children","themeDark","setThemeDark","videoModalVisible","setVideoModalVisible","visibleOffCanvas","setVisibleOffCanvas","header","setHeader","theme","variant","align","isFluid","button","footer","setFooter","style","toggleTheme","toggleVideoModal","toggleOffCanvas","closeOffCanvas"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,MAAMC,aAAa,GAAGF,KAAK,CAACG,aAAN,EAAtB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACvC,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BN,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAA,OAACO,iBAAD;AAAA,OAAoBC;AAApB,MAA4CR,QAAQ,CAAC,KAAD,CAA1D;AACA,QAAM;AAAA,OAACS,gBAAD;AAAA,OAAmBC;AAAnB,MAA0CV,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM;AAAA,OAACW,MAAD;AAAA,OAASC;AAAT,MAAsBZ,QAAQ,CAAC;AACnCa,IAAAA,KAAK,EAAE,OAD4B;AAEnCC,IAAAA,OAAO,EAAE,SAF0B;AAGnCC,IAAAA,KAAK,EAAE,MAH4B;AAInCC,IAAAA,OAAO,EAAE,KAJ0B;AAKnCC,IAAAA,MAAM,EAAE,KAL2B,CAKpB;;AALoB,GAAD,CAApC;AAOA,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBnB,QAAQ,CAAC;AACnCa,IAAAA,KAAK,EAAE,MAD4B;AAEnCO,IAAAA,KAAK,EAAE,QAF4B,CAElB;;AAFkB,GAAD,CAApC;;AAKA,QAAMC,WAAW,GAAG,MAAM;AACxBf,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD,GAFD;;AAIA,QAAMiB,gBAAgB,GAAG,MAAM;AAC7Bd,IAAAA,oBAAoB,CAAC,CAACD,iBAAF,CAApB;AACD,GAFD;;AAIA,QAAMgB,eAAe,GAAG,MAAM;AAC5Bb,IAAAA,mBAAmB,CAAC,CAACD,gBAAF,CAAnB;AACD,GAFD;;AAIA,QAAMe,cAAc,GAAG,MAAM;AAC3Bd,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD,GAFD;;AAIA,SACE,MAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLL,MAAAA,SADK;AAELgB,MAAAA,WAFK;AAGLd,MAAAA,iBAHK;AAILe,MAAAA,gBAJK;AAKLb,MAAAA,gBALK;AAMLc,MAAAA,eANK;AAOLC,MAAAA,cAPK;AAQLb,MAAAA,MARK;AASLC,MAAAA,SATK;AAULM,MAAAA,MAVK;AAWLC,MAAAA;AAXK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAeGf,QAfH,CADF;AAmBD,CAnDD;;AAqDA,eAAeH,aAAf;AACA,SAASE,cAAT","sourcesContent":["import React, { useState } from \"react\";\n\nconst GlobalContext = React.createContext();\n\nconst GlobalProvider = ({ children }) => {\n  const [themeDark, setThemeDark] = useState(false);\n  const [videoModalVisible, setVideoModalVisible] = useState(false);\n  const [visibleOffCanvas, setVisibleOffCanvas] = useState(false);\n  const [header, setHeader] = useState({\n    theme: \"light\",\n    variant: \"primary\",\n    align: \"left\",\n    isFluid: false,\n    button: \"cta\", // cta, account, null\n  });\n  const [footer, setFooter] = useState({\n    theme: \"dark\",\n    style: \"style1\", //style1, style2\n  });\n\n  const toggleTheme = () => {\n    setThemeDark(!themeDark);\n  };\n\n  const toggleVideoModal = () => {\n    setVideoModalVisible(!videoModalVisible);\n  };\n\n  const toggleOffCanvas = () => {\n    setVisibleOffCanvas(!visibleOffCanvas);\n  };\n\n  const closeOffCanvas = () => {\n    setVisibleOffCanvas(false);\n  };\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        themeDark,\n        toggleTheme,\n        videoModalVisible,\n        toggleVideoModal,\n        visibleOffCanvas,\n        toggleOffCanvas,\n        closeOffCanvas,\n        header,\n        setHeader,\n        footer,\n        setFooter,\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n\nexport default GlobalContext;\nexport { GlobalProvider };\n"]},"metadata":{},"sourceType":"module"}