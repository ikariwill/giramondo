{"ast":null,"code":"var _jsxFileName = \"/home/willian/repositorios/giramondo/src/components/Layout/Layout.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useContext, useRef } from \"react\";\nimport Head from \"next/head\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport AOS from \"aos\";\nimport Header from \"../Header\";\nimport Footer from \"../Footer\";\nimport ModalVideo from \"../ModalVideo\";\nimport GlobalContext from \"../../context/GlobalContext\";\nimport GlobalStyle from \"../../utils/globalStyle\";\nimport imgFavicon from \"../../assets/favicon.png\";\nimport { get, merge } from \"lodash\"; // the full theme object\n\nimport { theme as baseTheme } from \"../../utils\";\nconst Loader = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background: #fff;\n  z-index: 9999999999;\n  opacity: 1;\n  visibility: visible;\n  transition: all 1s ease-out 0.5s;\n  &.inActive {\n    opacity: 0;\n    visibility: hidden;\n  }\n`; // options for different color modes\n\nconst modes = {\n  light: \"light\",\n  dark: \"dark\"\n}; // merge the color mode with the base theme\n// to create a new theme object\n\nconst getTheme = mode => merge({}, baseTheme, {\n  colors: get(baseTheme.colors.modes, mode, baseTheme.colors)\n});\n\nconst Layout = ({\n  children,\n  pageContext\n}) => {\n  const gContext = useContext(GlobalContext);\n  const {\n    0: visibleLoader,\n    1: setVisibleLoader\n  } = useState(true);\n  useEffect(() => {\n    AOS.init({\n      once: true\n    });\n    setVisibleLoader(false);\n  }, []); // Navbar style based on scroll\n\n  const eleRef = useRef();\n  useEffect(() => {\n    window.addEventListener(\"popstate\", function (event) {\n      // The popstate event is fired each time when the current history entry changes.\n      gContext.closeOffCanvas();\n    }, false);\n    window.addEventListener(\"pushState\", function (event) {\n      // The pushstate event is fired each time when the current history entry changes.\n      gContext.closeOffCanvas();\n    }, false);\n  }, [gContext]);\n\n  if (pageContext.layout === \"bare\") {\n    return __jsx(ThemeProvider, {\n      theme: gContext.themeDark ? getTheme(modes.dark) : getTheme(modes.light),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      \"data-theme-mode-panel-active\": true,\n      \"data-theme\": \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, __jsx(GlobalStyle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }), __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, \"Shade Pro\"), __jsx(\"link\", {\n      rel: \"icon\",\n      type: \"image/png\",\n      href: imgFavicon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    })), __jsx(Loader, {\n      id: \"loading\",\n      className: visibleLoader ? \"\" : \"inActive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: \"load-circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      className: \"one\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }))), __jsx(\"div\", {\n      className: \"site-wrapper overflow-hidden\",\n      ref: eleRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, children, __jsx(Footer, {\n      isDark: gContext.footerDark,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    })), __jsx(ModalVideo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  return __jsx(React.Fragment, null, __jsx(ThemeProvider, {\n    theme: gContext.themeDark ? getTheme(modes.dark) : getTheme(modes.light),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    \"data-theme-mode-panel-active\": true,\n    \"data-theme\": \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, __jsx(GlobalStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }), __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, \"Shade Pro\"), __jsx(\"link\", {\n    rel: \"icon\",\n    type: \"image/png\",\n    href: imgFavicon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  })), __jsx(Loader, {\n    id: \"loading\",\n    className: visibleLoader ? \"\" : \"inActive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    className: \"site-wrapper overflow-hidden\",\n    ref: eleRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, __jsx(Header, {\n    isDark: gContext.headerDark,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }), children, __jsx(Footer, {\n    isDark: gContext.footerDark,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  })), __jsx(ModalVideo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Layout;","map":{"version":3,"sources":["/home/willian/repositorios/giramondo/src/components/Layout/Layout.js"],"names":["React","useState","useEffect","useContext","useRef","Head","styled","ThemeProvider","AOS","Header","Footer","ModalVideo","GlobalContext","GlobalStyle","imgFavicon","get","merge","theme","baseTheme","Loader","div","modes","light","dark","getTheme","mode","colors","Layout","children","pageContext","gContext","visibleLoader","setVisibleLoader","init","once","eleRef","window","addEventListener","event","closeOffCanvas","layout","themeDark","footerDark","headerDark"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,MAAP,IAAiBC,aAAjB,QAAsC,mBAAtC;AACA,OAAOC,GAAP,MAAgB,KAAhB;AAEA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,OAAOC,aAAP,MAA0B,6BAA1B;AAEA,OAAOC,WAAP,MAAwB,yBAAxB;AAEA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,SAASC,GAAT,EAAcC,KAAd,QAA2B,QAA3B,C,CAEA;;AACA,SAASC,KAAK,IAAIC,SAAlB,QAAmC,aAAnC;AAEA,MAAMC,MAAM,GAAGb,MAAM,CAACc,GAAI;;;;;;;;;;;;;;;CAA1B,C,CAiBA;;AACA,MAAMC,KAAK,GAAG;AAAEC,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,IAAI,EAAE;AAAxB,CAAd,C,CAEA;AACA;;AACA,MAAMC,QAAQ,GAAIC,IAAD,IACfT,KAAK,CAAC,EAAD,EAAKE,SAAL,EAAgB;AACnBQ,EAAAA,MAAM,EAAEX,GAAG,CAACG,SAAS,CAACQ,MAAV,CAAiBL,KAAlB,EAAyBI,IAAzB,EAA+BP,SAAS,CAACQ,MAAzC;AADQ,CAAhB,CADP;;AAKA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA+B;AAC5C,QAAMC,QAAQ,GAAG3B,UAAU,CAACS,aAAD,CAA3B;AAEA,QAAM;AAAA,OAACmB,aAAD;AAAA,OAAgBC;AAAhB,MAAoC/B,QAAQ,CAAC,IAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,GAAG,CAACyB,IAAJ,CAAS;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAT;AACAF,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD,GAHQ,EAGN,EAHM,CAAT,CAL4C,CAU5C;;AACA,QAAMG,MAAM,GAAG/B,MAAM,EAArB;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdkC,IAAAA,MAAM,CAACC,gBAAP,CACE,UADF,EAEE,UAAUC,KAAV,EAAiB;AACf;AACAR,MAAAA,QAAQ,CAACS,cAAT;AACD,KALH,EAME,KANF;AAQAH,IAAAA,MAAM,CAACC,gBAAP,CACE,WADF,EAEE,UAAUC,KAAV,EAAiB;AACf;AACAR,MAAAA,QAAQ,CAACS,cAAT;AACD,KALH,EAME,KANF;AAQD,GAjBQ,EAiBN,CAACT,QAAD,CAjBM,CAAT;;AAmBA,MAAID,WAAW,CAACW,MAAZ,KAAuB,MAA3B,EAAmC;AACjC,WACE,MAAC,aAAD;AACE,MAAA,KAAK,EACHV,QAAQ,CAACW,SAAT,GAAqBjB,QAAQ,CAACH,KAAK,CAACE,IAAP,CAA7B,GAA4CC,QAAQ,CAACH,KAAK,CAACC,KAAP,CAFxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE;AAAK,0CAAL;AAAkC,oBAAW,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAM,MAAA,GAAG,EAAC,MAAV;AAAiB,MAAA,IAAI,EAAC,WAAtB;AAAkC,MAAA,IAAI,EAAER,UAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFF,EAME,MAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,SAAX;AAAqB,MAAA,SAAS,EAAEiB,aAAa,GAAG,EAAH,GAAQ,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CANF,EAWE;AAAK,MAAA,SAAS,EAAC,8BAAf;AAA8C,MAAA,GAAG,EAAEI,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGP,QADH,EAEE,MAAC,MAAD;AAAQ,MAAA,MAAM,EAAEE,QAAQ,CAACY,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAXF,EAgBE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,CALF,CADF;AA0BD;;AAED,SACE,4BACE,MAAC,aAAD;AACE,IAAA,KAAK,EACHZ,QAAQ,CAACW,SAAT,GAAqBjB,QAAQ,CAACH,KAAK,CAACE,IAAP,CAA7B,GAA4CC,QAAQ,CAACH,KAAK,CAACC,KAAP,CAFxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAK,wCAAL;AAAkC,kBAAW,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAM,IAAA,GAAG,EAAC,MAAV;AAAiB,IAAA,IAAI,EAAC,WAAtB;AAAkC,IAAA,IAAI,EAAER,UAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,EAME,MAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,SAAX;AAAqB,IAAA,SAAS,EAAEiB,aAAa,GAAG,EAAH,GAAQ,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE;AAAK,IAAA,SAAS,EAAC,8BAAf;AAA8C,IAAA,GAAG,EAAEI,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,MAAM,EAAEL,QAAQ,CAACa,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGf,QAFH,EAIE,MAAC,MAAD;AAAQ,IAAA,MAAM,EAAEE,QAAQ,CAACY,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAPF,EAcE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,CALF,CADF,CADF;AA0BD,CAvFD;;AAyFA,eAAef,MAAf","sourcesContent":["import React, { useState, useEffect, useContext, useRef } from \"react\";\nimport Head from \"next/head\";\n\nimport styled, { ThemeProvider } from \"styled-components\";\nimport AOS from \"aos\";\n\nimport Header from \"../Header\";\nimport Footer from \"../Footer\";\n\nimport ModalVideo from \"../ModalVideo\";\n\nimport GlobalContext from \"../../context/GlobalContext\";\n\nimport GlobalStyle from \"../../utils/globalStyle\";\n\nimport imgFavicon from \"../../assets/favicon.png\";\n\nimport { get, merge } from \"lodash\";\n\n// the full theme object\nimport { theme as baseTheme } from \"../../utils\";\n\nconst Loader = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background: #fff;\n  z-index: 9999999999;\n  opacity: 1;\n  visibility: visible;\n  transition: all 1s ease-out 0.5s;\n  &.inActive {\n    opacity: 0;\n    visibility: hidden;\n  }\n`;\n\n// options for different color modes\nconst modes = { light: \"light\", dark: \"dark\" };\n\n// merge the color mode with the base theme\n// to create a new theme object\nconst getTheme = (mode) =>\n  merge({}, baseTheme, {\n    colors: get(baseTheme.colors.modes, mode, baseTheme.colors),\n  });\n\nconst Layout = ({ children, pageContext }) => {\n  const gContext = useContext(GlobalContext);\n\n  const [visibleLoader, setVisibleLoader] = useState(true);\n\n  useEffect(() => {\n    AOS.init({ once: true });\n    setVisibleLoader(false);\n  }, []);\n\n  // Navbar style based on scroll\n  const eleRef = useRef();\n\n  useEffect(() => {\n    window.addEventListener(\n      \"popstate\",\n      function (event) {\n        // The popstate event is fired each time when the current history entry changes.\n        gContext.closeOffCanvas();\n      },\n      false\n    );\n    window.addEventListener(\n      \"pushState\",\n      function (event) {\n        // The pushstate event is fired each time when the current history entry changes.\n        gContext.closeOffCanvas();\n      },\n      false\n    );\n  }, [gContext]);\n\n  if (pageContext.layout === \"bare\") {\n    return (\n      <ThemeProvider\n        theme={\n          gContext.themeDark ? getTheme(modes.dark) : getTheme(modes.light)\n        }\n      >\n        <div data-theme-mode-panel-active data-theme=\"light\">\n          <GlobalStyle />\n          <Head>\n            <title>Shade Pro</title>\n            <link rel=\"icon\" type=\"image/png\" href={imgFavicon} />\n          </Head>\n          <Loader id=\"loading\" className={visibleLoader ? \"\" : \"inActive\"}>\n            <div className=\"load-circle\">\n              <span className=\"one\"></span>\n            </div>\n          </Loader>\n          <div className=\"site-wrapper overflow-hidden\" ref={eleRef}>\n            {children}\n            <Footer isDark={gContext.footerDark} />\n          </div>\n\n          <ModalVideo />\n        </div>\n      </ThemeProvider>\n    );\n  }\n\n  return (\n    <>\n      <ThemeProvider\n        theme={\n          gContext.themeDark ? getTheme(modes.dark) : getTheme(modes.light)\n        }\n      >\n        <div data-theme-mode-panel-active data-theme=\"light\">\n          <GlobalStyle />\n          <Head>\n            <title>Shade Pro</title>\n            <link rel=\"icon\" type=\"image/png\" href={imgFavicon} />\n          </Head>\n          <Loader id=\"loading\" className={visibleLoader ? \"\" : \"inActive\"} />\n          <div className=\"site-wrapper overflow-hidden\" ref={eleRef}>\n            <Header isDark={gContext.headerDark} />\n            {children}\n\n            <Footer isDark={gContext.footerDark} />\n          </div>\n\n          <ModalVideo />\n        </div>\n      </ThemeProvider>\n    </>\n  );\n};\n\nexport default Layout;\n"]},"metadata":{},"sourceType":"module"}